{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GameStateInitial=_ref=>{let{userList,displayName}=_ref;const eventSourceRef=useRef(null);const[board,setBoard]=useState([]);const[currentPlayer,setCurrentPlayer]=useState(0);useEffect(()=>{console.log(\"Game has started\");if(!eventSourceRef.current&&displayName){const eventSource=new EventSource(`/events?displayName=${displayName}`);eventSourceRef.current=eventSource;eventSource.onmessage=event=>{const data=JSON.parse(event.data);if(data.type==='init'||data.type==='update'){setBoard(data.gameState.board);setCurrentPlayer(data.gameState.currentPlayer);}};eventSource.onerror=error=>{console.error(\"EventSource failed:\",error);eventSource.close();eventSourceRef.current=null;};return()=>{eventSource.close();eventSourceRef.current=null;};}// Notify the server that the GameStateInitial component has loaded\nfetch(\"/game-state-initial-loaded\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({displayName})}).then(response=>response.json()).then(data=>console.log(data.message)).catch(error=>console.error(\"Error notifying server:\",error));},[displayName]);useEffect(()=>{console.log(\"All clients loaded\");},[userList]);const handleCellClick=(row,col)=>{if(board[row][col].revealed||currentPlayer!==userList.findIndex(user=>user.displayName===displayName))return;fetch(\"/cell-click\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({row,col,displayName})}).then(response=>response.json()).then(data=>console.log(data.message)).catch(error=>console.error(\"Error clicking cell:\",error));};return/*#__PURE__*/_jsxs(\"div\",{className:\"hero center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-grid\",children:userList.filter(user=>user.displayName).map(user=>/*#__PURE__*/_jsx(\"div\",{className:\"user-card-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"user-card\",children:user.displayName})},user.displayName))}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"minesweeper-board\",children:board.map((row,rowIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"board-row\",children:row.map((cell,colIndex)=>/*#__PURE__*/_jsx(\"div\",{className:`board-cell ${cell.revealed?'revealed':''}`,onClick:()=>handleCellClick(rowIndex,colIndex),children:cell.revealed&&(cell.mine?'ðŸ’£':cell.adjacentMines)},colIndex))},rowIndex))}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Current Player: \",userList[currentPlayer].displayName]})]});};export default GameStateInitial;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","GameStateInitial","_ref","userList","displayName","eventSourceRef","board","setBoard","currentPlayer","setCurrentPlayer","console","log","current","eventSource","EventSource","onmessage","event","data","JSON","parse","type","gameState","onerror","error","close","fetch","method","headers","body","stringify","then","response","json","message","catch","handleCellClick","row","col","revealed","findIndex","user","className","children","filter","map","rowIndex","cell","colIndex","onClick","mine","adjacentMines"],"sources":["/Users/baijianqing/VSC/The-Retro-Retro-Game/frontend/src/components/GameStateInitial.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst GameStateInitial = ({ userList, displayName }) => {\n    const eventSourceRef = useRef(null);\n    const [board, setBoard] = useState([]);\n    const [currentPlayer, setCurrentPlayer] = useState(0);\n\n    useEffect(() => {\n        console.log(\"Game has started\");\n\n        if (!eventSourceRef.current && displayName) {\n            const eventSource = new EventSource(`/events?displayName=${displayName}`);\n            eventSourceRef.current = eventSource;\n\n            eventSource.onmessage = (event) => {\n                const data = JSON.parse(event.data);\n                if (data.type === 'init' || data.type === 'update') {\n                    setBoard(data.gameState.board);\n                    setCurrentPlayer(data.gameState.currentPlayer);\n                }\n            };\n\n            eventSource.onerror = (error) => {\n                console.error(\"EventSource failed:\", error);\n                eventSource.close();\n                eventSourceRef.current = null;\n            };\n\n            return () => {\n                eventSource.close();\n                eventSourceRef.current = null;\n            };\n        }\n\n        // Notify the server that the GameStateInitial component has loaded\n        fetch(\"/game-state-initial-loaded\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ displayName }),\n        }).then(response => response.json())\n          .then(data => console.log(data.message))\n          .catch(error => console.error(\"Error notifying server:\", error));\n\n    }, [displayName]);\n\n    useEffect(() => {\n        console.log(\"All clients loaded\");\n    }, [userList]);\n\n    const handleCellClick = (row, col) => {\n        if (board[row][col].revealed || currentPlayer !== userList.findIndex(user => user.displayName === displayName)) return;\n\n        fetch(\"/cell-click\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ row, col, displayName }),\n        }).then(response => response.json())\n          .then(data => console.log(data.message))\n          .catch(error => console.error(\"Error clicking cell:\", error));\n    };\n\n    return (\n        <div className=\"hero center\">\n            <div className=\"user-grid\">\n                {userList.filter(user => user.displayName).map(user => (\n                    <div key={user.displayName} className=\"user-card-container\">\n                        <div className=\"user-card\">\n                            {user.displayName}\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <br />\n            <div className=\"minesweeper-board\">\n                {board.map((row, rowIndex) => (\n                    <div key={rowIndex} className=\"board-row\">\n                        {row.map((cell, colIndex) => (\n                            <div\n                                key={colIndex}\n                                className={`board-cell ${cell.revealed ? 'revealed' : ''}`}\n                                onClick={() => handleCellClick(rowIndex, colIndex)}\n                            >\n                                {cell.revealed && (cell.mine ? 'ðŸ’£' : cell.adjacentMines)}\n                            </div>\n                        ))}\n                    </div>\n                ))}\n            </div>\n            <div>Current Player: {userList[currentPlayer].displayName}</div>\n        </div>\n    );\n};\nexport default GameStateInitial;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}