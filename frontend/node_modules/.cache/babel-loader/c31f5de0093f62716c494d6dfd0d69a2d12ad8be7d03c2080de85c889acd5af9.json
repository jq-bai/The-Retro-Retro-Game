{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GameStateInitial=_ref=>{let{userList,displayName}=_ref;const[currentPrompt,setCurrentPrompt]=useState(\"Click to Reveal Your Prompt\");const[isClicked,setIsClicked]=useState(false);const[commonPrompt,setCommonPrompt]=useState(\"\");const[differentPrompt,setDifferentPrompt]=useState(\"\");const[differentPromptUser,setDifferentPromptUser]=useState(\"\");const eventSourceRef=useRef(null);useEffect(()=>{console.log(\"Game has started\");if(!eventSourceRef.current){const eventSource=new EventSource(`/events`);eventSourceRef.current=eventSource;eventSource.onmessage=event=>{const data=JSON.parse(event.data);if(data.type==='promptAssignment'){setCommonPrompt(data.commonPrompt);setDifferentPrompt(data.differentPrompt);setDifferentPromptUser(data.differentPromptUser);console.log(\"Prompt received from server:\",data);}// Handle other event types if needed\n};eventSource.onerror=error=>{console.error(\"EventSource failed:\",error);eventSource.close();eventSourceRef.current=null;};return()=>{eventSource.close();eventSourceRef.current=null;};}// Notify the server that the GameStateInitial component has loaded\nfetch(\"/game-state-initial-loaded\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({displayName})}).then(response=>response.json()).then(data=>console.log(data.message)).catch(error=>console.error(\"Error notifying server:\",error));},[displayName]);const handlePromptClick=()=>{if(!isClicked){if(displayName===differentPromptUser){setCurrentPrompt(differentPrompt);}else{setCurrentPrompt(commonPrompt);}setIsClicked(true);}};useEffect(()=>{console.log(\"All clients loaded\");},[userList]);return/*#__PURE__*/_jsxs(\"div\",{className:\"hero center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-grid\",children:userList.filter(user=>user.displayName).map(user=>/*#__PURE__*/_jsxs(\"div\",{className:\"user-card-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-card\",children:user.displayName}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"cta\",children:\"Vote\"})]},user.displayName))}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"prompt-card center\",onClick:handlePromptClick,children:/*#__PURE__*/_jsx(\"h2\",{children:currentPrompt})})})]});};export default GameStateInitial;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","GameStateInitial","_ref","userList","displayName","currentPrompt","setCurrentPrompt","isClicked","setIsClicked","commonPrompt","setCommonPrompt","differentPrompt","setDifferentPrompt","differentPromptUser","setDifferentPromptUser","eventSourceRef","console","log","current","eventSource","EventSource","onmessage","event","data","JSON","parse","type","onerror","error","close","fetch","method","headers","body","stringify","then","response","json","message","catch","handlePromptClick","className","children","filter","user","map","onClick"],"sources":["/Users/baijianqing/VSC/The-Retro-Retro-Game/frontend/src/components/GameStateInitial.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst GameStateInitial = ({ userList, displayName }) => {\n    const [currentPrompt, setCurrentPrompt] = useState(\"Click to Reveal Your Prompt\");\n    const [isClicked, setIsClicked] = useState(false);\n    const [commonPrompt, setCommonPrompt] = useState(\"\");\n    const [differentPrompt, setDifferentPrompt] = useState(\"\");\n    const [differentPromptUser, setDifferentPromptUser] = useState(\"\");\n    const eventSourceRef = useRef(null);\n\n    useEffect(() => {\n        console.log(\"Game has started\");\n\n        if (!eventSourceRef.current) {\n            const eventSource = new EventSource(`/events`);\n            eventSourceRef.current = eventSource;\n\n            eventSource.onmessage = (event) => {\n                const data = JSON.parse(event.data);\n                if (data.type === 'promptAssignment') {\n                    setCommonPrompt(data.commonPrompt);\n                    setDifferentPrompt(data.differentPrompt);\n                    setDifferentPromptUser(data.differentPromptUser);\n                    console.log(\"Prompt received from server:\", data);\n                }\n                // Handle other event types if needed\n            };\n\n            eventSource.onerror = (error) => {\n                console.error(\"EventSource failed:\", error);\n                eventSource.close();\n                eventSourceRef.current = null;\n            };\n\n            return () => {\n                eventSource.close();\n                eventSourceRef.current = null;\n            };\n        }\n\n        // Notify the server that the GameStateInitial component has loaded\n        fetch(\"/game-state-initial-loaded\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ displayName }),\n        }).then(response => response.json())\n          .then(data => console.log(data.message))\n          .catch(error => console.error(\"Error notifying server:\", error));\n\n    }, [displayName]);\n\n    const handlePromptClick = () => {\n        if (!isClicked) {\n            if (displayName === differentPromptUser) {\n                setCurrentPrompt(differentPrompt);\n            } else {\n                setCurrentPrompt(commonPrompt);\n            }\n            setIsClicked(true);\n        }\n    };\n\n    useEffect(() => {\n        console.log(\"All clients loaded\");\n    }, [userList]);\n\n    return (\n        <div className=\"hero center\">\n            <div className=\"user-grid\">\n                {userList.filter(user => user.displayName).map(user => (\n                    <div key={user.displayName} className=\"user-card-container\">\n                        <div className=\"user-card\">\n                            {user.displayName}\n                        </div>\n                        <br />\n                        <button className=\"cta\">Vote</button>\n                    </div>\n                ))}\n            </div>\n            <br />\n            <br />\n            <br />\n            <br />\n            <div>\n                <div className=\"prompt-card center\" onClick={handlePromptClick}>\n                    <h2>{currentPrompt}</h2>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default GameStateInitial;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}