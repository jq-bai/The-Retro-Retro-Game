{"ast":null,"code":"/*\n    This is for a client to enter their name to initiate joining a game\n*/import React,{useState}from'react';// Imports the useState hook from React\nimport axios from'axios';// Imports the Axios library for making HTTP requests\n// NameFormScreen component with an onSubmit prop\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NameFormScreen=_ref=>{let{onSubmit}=_ref;const[displayName,setDisplayName]=useState('');// State variable to track the display name\n// Function to update the display name\nconst handleChange=event=>{setDisplayName(event.target.value);};// Function to check if the entered display name already exists\nconst checkNameExists=async name=>{try{const response=await axios.post('/check-name',{displayName:name});return response.data.exists;}// Error handling for checking name\ncatch(error){console.error('Error checking name:',error);return false;}};// Function to send the display name to the server\nconst handleSubmit=async event=>{event.preventDefault();if(displayName){const nameExists=await checkNameExists(displayName);if(nameExists){alert(\"Don't copy others leh, use a different name\");}else{onSubmit(displayName);}}else{alert(\"You don't anyhow ah, enter your name first\");}};// Renders JSX visual elements\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"hero center\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Enter your Name\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"form\",{className:\"form-container\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{className:\"textfield\",type:\"text\",value:displayName,onChange:handleChange,placeholder:\"Hmmm..\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"cta\",type:\"submit\",children:\"Next\"})]})]});};export default NameFormScreen;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","NameFormScreen","_ref","onSubmit","displayName","setDisplayName","handleChange","event","target","value","checkNameExists","name","response","post","data","exists","error","console","handleSubmit","preventDefault","nameExists","alert","className","children","type","onChange","placeholder"],"sources":["/Users/jq/VSC/The-Retro-Retro-Game/frontend/src/components/NameFormScreen.js"],"sourcesContent":["/*\n    This is for a client to enter their name to initiate joining a game\n*/\n\nimport React, { useState } from 'react'; // Imports the useState hook from React\nimport axios from 'axios'; // Imports the Axios library for making HTTP requests\n\n// NameFormScreen component with an onSubmit prop\nconst NameFormScreen = ({ onSubmit }) => {\n    const [displayName, setDisplayName] = useState(''); // State variable to track the display name\n\n    // Function to update the display name\n    const handleChange = (event) => {\n        setDisplayName(event.target.value);\n    };\n\n    // Function to check if the entered display name already exists\n    const checkNameExists = async (name) => {\n        try {\n            const response = await axios.post('/check-name', { displayName: name });\n            return response.data.exists;\n        } \n        \n        // Error handling for checking name\n        catch (error) {\n            console.error('Error checking name:', error);\n            return false;\n        }\n    };\n\n    // Function to send the display name to the server\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (displayName) {\n            const nameExists = await checkNameExists(displayName);\n            if (nameExists) {\n                alert(\"Don't copy others leh, use a different name\");\n            } else {\n                onSubmit(displayName);\n            }\n        } else {\n            alert(\"You don't anyhow ah, enter your name first\");\n        }\n    };\n\n    // Renders JSX visual elements\n    return (\n        <div className=\"hero center\">\n            <h2>Enter your Name</h2>\n            <br />\n            <form className=\"form-container\" onSubmit={handleSubmit}>\n                <input\n                    className=\"textfield\"\n                    type=\"text\"\n                    value={displayName}\n                    onChange={handleChange}\n                    placeholder=\"Hmmm..\"\n                />\n                <br />\n                <br />\n                <button className=\"cta\" type=\"submit\">Next</button>\n            </form>\n        </div>\n    );\n};\n\nexport default NameFormScreen;"],"mappings":"AAAA;AACA;AACA,EAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAE;AACzC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAE;AAE3B;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChC,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEpD;AACA,KAAM,CAAAW,YAAY,CAAIC,KAAK,EAAK,CAC5BF,cAAc,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACtC,CAAC,CAED;AACA,KAAM,CAAAC,eAAe,CAAG,KAAO,CAAAC,IAAI,EAAK,CACpC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAhB,KAAK,CAACiB,IAAI,CAAC,aAAa,CAAE,CAAET,WAAW,CAAEO,IAAK,CAAC,CAAC,CACvE,MAAO,CAAAC,QAAQ,CAACE,IAAI,CAACC,MAAM,CAC/B,CAEA;AACA,MAAOC,KAAK,CAAE,CACVC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,MAAO,MAAK,CAChB,CACJ,CAAC,CAED;AACA,KAAM,CAAAE,YAAY,CAAG,KAAO,CAAAX,KAAK,EAAK,CAClCA,KAAK,CAACY,cAAc,CAAC,CAAC,CACtB,GAAIf,WAAW,CAAE,CACb,KAAM,CAAAgB,UAAU,CAAG,KAAM,CAAAV,eAAe,CAACN,WAAW,CAAC,CACrD,GAAIgB,UAAU,CAAE,CACZC,KAAK,CAAC,6CAA6C,CAAC,CACxD,CAAC,IAAM,CACHlB,QAAQ,CAACC,WAAW,CAAC,CACzB,CACJ,CAAC,IAAM,CACHiB,KAAK,CAAC,4CAA4C,CAAC,CACvD,CACJ,CAAC,CAED;AACA,mBACIrB,KAAA,QAAKsB,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxBzB,IAAA,OAAAyB,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBzB,IAAA,QAAK,CAAC,cACNE,KAAA,SAAMsB,SAAS,CAAC,gBAAgB,CAACnB,QAAQ,CAAEe,YAAa,CAAAK,QAAA,eACpDzB,IAAA,UACIwB,SAAS,CAAC,WAAW,CACrBE,IAAI,CAAC,MAAM,CACXf,KAAK,CAAEL,WAAY,CACnBqB,QAAQ,CAAEnB,YAAa,CACvBoB,WAAW,CAAC,QAAQ,CACvB,CAAC,cACF5B,IAAA,QAAK,CAAC,cACNA,IAAA,QAAK,CAAC,cACNA,IAAA,WAAQwB,SAAS,CAAC,KAAK,CAACE,IAAI,CAAC,QAAQ,CAAAD,QAAA,CAAC,MAAI,CAAQ,CAAC,EACjD,CAAC,EACN,CAAC,CAEd,CAAC,CAED,cAAe,CAAAtB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}